name: build-push
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        type: string
      MAKE_TARGET:
        type: string
        default: 'ci-cd-build'
      VERSION:
        type: string
      DOCKER_IDENTIFIER:
        type: string
      DOCKER_FILE_NAME:
        type: string
        default: 'Dockerfile'
      APP_NAME_VAR:
        type: string
        default: 'APP_NAME'
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
env:
  TOKEN: ${{ secrets.GITPAT }}
  DOCKER_REPO: ${{ vars.DOCKER_REPO }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  VERSION: ${{ inputs.VERSION }}
  DOCKER_IDENTIFIER: ${{ inputs.DOCKER_IDENTIFIER }}

jobs:

  build:
    runs-on: zk-self-hosted
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    env:
      REPO_NAME: ${{ format('{0}/{1}/{2}/{3}', vars.DOCKER_REG_DOCKERHUB, vars.DOCKER_REPO, inputs.DOCKER_IDENTIFIER, vars[format('{0}', inputs.APP_NAME_VAR)] ) }}
      CREATE_REPO_NAME: ${{ format('{0}/{1}/{2}', vars.DOCKER_REPO, inputs.DOCKER_IDENTIFIER, vars[format('{0}', inputs.APP_NAME_VAR)] ) }}
      GIT_SHA_TAG: ${{ format('{0}/{1}:{2}', vars.DOCKER_REG_DOCKERHUB, vars[format('{0}', inputs.APP_NAME_VAR)], github.sha ) }}
      VERSION_TAG: ${{ format('{0}/{1}:{2}', vars.DOCKER_REG_DOCKERHUB, vars[format('{0}', inputs.APP_NAME_VAR)], inputs.VERSION ) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure git for private modules
        run: git config --global url."https://$TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Build and Push
        run: |
          make ${{ inputs.MAKE_TARGET }}

#  docker-push:
#    needs: build
#    runs-on: zk-self-hosted
#    env:
#      REPO_NAME: ${{ format('{0}/{1}/{2}/{3}', vars.DOCKER_REG_DOCKERHUB, vars.DOCKER_REPO, inputs.DOCKER_IDENTIFIER, vars[format('{0}', inputs.APP_NAME_VAR)] ) }}
#      CREATE_REPO_NAME: ${{ format('{0}/{1}/{2}', vars.DOCKER_REPO, inputs.DOCKER_IDENTIFIER, vars[format('{0}', inputs.APP_NAME_VAR)] ) }}
#      GIT_SHA_TAG: ${{ format('{0}/{1}:{2}', vars.DOCKER_REG_DOCKERHUB, vars[format('{0}', inputs.APP_NAME_VAR)], github.sha ) }}
#      VERSION_TAG: ${{ format('{0}/{1}:{2}', vars.DOCKER_REG_DOCKERHUB, vars[format('{0}', inputs.APP_NAME_VAR)], inputs.VERSION ) }}
#    environment:
#      name: ${{ inputs.ENVIRONMENT }}
#    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checking the contents
        run: |
          echo $PWD
          ls
          ls ./bin

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.GIT_SHA_TAG }}, ${{ env.VERSION_TAG }}