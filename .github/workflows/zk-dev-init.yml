name: dev-init
on:
  workflow_call:
    inputs:
      GIT_TAG:
        type: string
      GKE_CLUSTER:
        type: string
      DOCKER_TAG:
        type: string
    outputs:
      ENVIRONMENT:
        description: "Extracted environment"
        value: ${{ jobs.init.outputs.ENVIRONMENT }}
      VERSION:
        description: "Extracted version"
        value: ${{ jobs.init.outputs.VERSION }}
      CLUSTERNAME:
        description: "Extracted cluster name"
        value: ${{ jobs.init.outputs.CLUSTERNAME }}
      HELM_BUCKET_NAME:
        description: "Helm bucket name"
        value: ${{ jobs.init.outputs.HELM_BUCKET_NAME }}
      HELM_BUCKET_URL:
        description: "Helm bucket url"
        value: ${{ jobs.init.outputs.HELM_BUCKET_URL }}
env:
  GIT_TAG: ${{ inputs.GIT_TAG }}
  GKE_CLUSTER: ${{ inputs.GKE_CLUSTER }}
  DOCKER_TAG: ${{ inputs.DOCKER_TAG }}

jobs:
  init:
    runs-on: zk-self-hosted
    outputs:
      ENVIRONMENT: ${{ steps.extractEnvironment.outputs.EXTRACTED_ENVIRONMENT }}
      CLUSTERNAME: ${{ steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME }}
      VERSION: ${{ steps.extractClusterAndVersion.outputs.TAG_VERSION }}
      HELM_BUCKET_NAME: ${{ vars.PRIVATE_HELM_S3_BUCKET }}
      HELM_BUCKET_URL: ${{ vars.PRIVATE_HELM_S3_BUCKET_URL }}
    steps:
      - name: Extract cluster and version
        id: extractClusterAndVersion
        run: |
          GIT_TAG=${GIT_TAG#refs/*/}
          if [ "$DOCKER_TAG" == "" ]; then
            part1=$(echo "$GIT_TAG" | cut -d'/' -f2)
            part2=$(echo "$GIT_TAG" | cut -d'/' -f3)
            echo "TAG_CLUSTERNAME=$part1" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$part2" >> $GITHUB_OUTPUT
            clusterName=$part1
          else
            echo "TAG_CLUSTERNAME=$GKE_CLUSTER" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$DOCKER_TAG" >> $GITHUB_OUTPUT
            clusterName=$GKE_CLUSTER
          fi
          TAG_CLUSTERNAME_CAPITAL=$(echo "$clusterName" | tr '[:lower:]' '[:upper:]')
          echo "TAG_CLUSTERNAME_CAPITAL=$TAG_CLUSTERNAME_CAPITAL" >> $GITHUB_OUTPUT

      - name: Extract environment
        id: extractEnvironment
        env:
          ORG_VARIABLE_NAME: ${{ format('{0}_ENV', steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME_CAPITAL) }}
          ORG_VARIABLE: ${{ vars[format('{0}_ENV', steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME_CAPITAL)] }}
        run: |
          echo "EXTRACTED_ENVIRONMENT=$ORG_VARIABLE" >> $GITHUB_OUTPUT
          echo "$ORG_VARIABLE_NAME"
          echo "$ORG_VARIABLE"