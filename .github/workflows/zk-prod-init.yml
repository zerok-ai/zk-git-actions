name: prod-init
on:
  workflow_call:
    inputs:
      GIT_TAG:
        type: string
      DOCKER_TAG:
        type: string
      ENVIRONMENT:
        type: string
    outputs:
      ENVIRONMENT:
        description: "Extracted environment"
        value: ${{ jobs.init.outputs.ENVIRONMENT }}
      VERSION:
        description: "Extracted version"
        value: ${{ jobs.init.outputs.VERSION }}
      HELM_BUCKET_NAME:
        description: "Helm bucket name"
        value: ${{ jobs.init.outputs.HELM_BUCKET_NAME }}
      HELM_BUCKET_URL:
        description: "Helm bucket url"
        value: ${{ jobs.init.outputs.HELM_BUCKET_URL }}
      GCLOUD_PROJECT_ID:
        description: "Gcloud Project Id"
        value: ${{ jobs.init.outputs.GCLOUD_PROJECT_ID }}
env:
  GIT_TAG: ${{ inputs.GIT_TAG }}
  ENV: ${{ inputs.ENVIRONMENT }}
  DOCKER_TAG: ${{ inputs.DOCKER_TAG }}

jobs:
  init:
    runs-on: zk-self-hosted
    outputs:
      ENVIRONMENT: ${{ steps.extractEnvAndVersion.outputs.TAG_ENV }}
      VERSION: ${{ steps.extractEnvAndVersion.outputs.TAG_VERSION }}
      HELM_BUCKET_NAME: ${{ vars.PUBLIC_HELM_S3_BUCKET }}
      HELM_BUCKET_URL: ${{ vars.PUBLIC_HELM_S3_BUCKET_URL }}
      GCLOUD_PROJECT_ID: ${{ vars.PROD_GCLOUD_PROJECT_ID }}
    steps:
      - name: Extract env and version
        id: extractEnvAndVersion
        run: |
          GIT_TAG=${GIT_TAG#refs/*/}
          if [ "$DOCKER_TAG" == "" ]; then
            part1=$(echo "$GIT_TAG" | cut -d'/' -f2)
            echo "TAG_VERSION=$part1" >> $GITHUB_OUTPUT
            echo "TAG_ENV=prod" >> $GITHUB_OUTPUT
          else
            echo "TAG_VERSION=$DOCKER_TAG" >> $GITHUB_OUTPUT
            echo "TAG_ENV=$ENV" >> $GITHUB_OUTPUT
          fi

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
